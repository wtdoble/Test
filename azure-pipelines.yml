# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: windows-latest

steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'

- task: AzureCLI@2
  displayName: Azure CLI
  inputs:
    azureSubscription:  ContainerInsights_Dev_Grace
    scriptType: ps
    scriptLocation: inlineScript
    inlineScript: |
      $p = ${env:PARAMETERS} 
      "Input Parameters: $p"

      $p2 = $p -replace "\\""", """"

      "Conforming input parameters: $p2"
      $j = $p2 | convertfrom-json

      $rg = (az group show -g ${env:RESOURCE-GROUP} | convertfrom-json)
      write-host "Resource group '$($rg.name)' location '$($rg.location)'."
      $nestedObject = [PSCustomObject]@{
          value = "$($rg.location)"
      }

      # Does the property exist?
      if (($j.azureMonitorWorkspaceLocation -eq $null) -or ($j.azureMonitorWorkspaceLocation.value -eq null)) {
        write-host "'azureMonitorWorkspaceLocation.value' not provided..."

        write-host "Using location '$($rg.location)' from '$($rg.name)"
        write-host "Adding new 'azureMonitorWorkspaceLocation' property..."

        $j | Add-Member -name "azureMonitorWorkspaceLocation" -MemberType NoteProperty -value $nestedObject -Force
        $j | fl

      # # } elseif ($j.azureMonitorWorkspaceLocation.value -eq null) {  # Does "value" subproperty exist?
      # #   write-host "'azureMonitorWorkspaceLocation' is provided, but it doesn't have a 'value' property."
         
      # #   $j | Add-Member -name "azureMonitorWorkspaceLocation" -MemberType NoteProperty -value $nestedObject -Force
      # #   $j | fl

      } elseif ([string]::IsNullOrEmpty($j.azureMonitorWorkspaceLocation.value)) {
        write-host "'azureMonitorWorkspaceLocation.value' is provided, but it's empty."
        write-host "Updating to '$($rg.location)'.""
        $j.azureMonitorWorkspaceLocation.value = $rg.location

      } else {
         write-host "'azureMonitorWorkspaceLocation.value' provided: $($j.azureMonitorWorkspaceLocation.value)"
      }

      $parmFinal = ($j | convertto-json -Compress)
      $parmFinal = $parmFinal -replace """", "\"""
      "Final parameters: $parmFinal"

      az --version
      az account show
      az deployment group create `
          --resource-group ${env:RESOURCE-GROUP} `
          --name ClusterDeployment `
          --template-file ".\wip9-final.json" `
          --parameters $parmFinal  ##${env:PARAMETERS}   
          
