# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: windows-latest

steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'

- task: AzureCLI@2
  displayName: Azure CLI
  inputs:
    azureSubscription:  ContainerInsights_Dev_Grace
    scriptType: ps
    scriptLocation: inlineScript
    inlineScript: |
      $clusterName = $(${env:CLUSTERNAME}).Trim()
      $actionGroupId = $(${env:ACTION-GROUP-ID}).Trim()
      $resourceGroup = $(${env:RESOURCE-GROUP}).Trim()
      $sub = $(${env:AZURESUBSCRIPTION}).Trim()

      $rg = (az group show -g $resourceGroup | convertfrom-json)
      if ($rg -eq $null) {
        throw "Resource group '$resourceGroup' not found"
      }
      write-host "Resource group '$($rg.name)' location '$($rg.location)'."

      $p = $(${env:PARAMETERS}).Trim()
      if ([string]::IsNullOrEmpty($p)) {
        $p = "{}"
      }
      "Default parameters: $p"
      $j = $p | convertfrom-json

      $parms = @(
        @{"name" = "clusterName";
          "value" = $clusterName},
        @{"name" = "actionGroupId";
          "value" = $actionGroupId},
        @{"name" = "azureMonitorWorkspaceLocation";
          "value" = $rg.location}
      )

      "Processing Parameters:"
      $parms | foreach {
          write-host "Name = $($_.name); Value = $($_.value)"

          if (![string]::IsNullOrEmpty($_.value.Trim())) {
            $n = [PSCustomObject]@{
              value = "$($_.value)"
            }

            "Updating parameter '$($_.name)'' to '$($_.value)'"
            $j | Add-Member -name $_.name -MemberType NoteProperty -value $n -Force          
          }
      }

      $j | fl

      $parmFinal = ($j | convertto-json -Compress)
      $parmFinal = $parmFinal -replace """", "\"""
      "Final parameters: $parmFinal"

      az --version
      az account show
      az deployment group create `
          --resource-group ${env:RESOURCE-GROUP} `
          --name ClusterDeployment `
          --template-file ".\wip9-final.json" `
          --parameters $parmFinal  ##${env:PARAMETERS}   
      