# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: windows-latest

steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'

- task: AzureCLI@2
  displayName: Azure CLI
  inputs:
    azureSubscription:  ContainerInsights_Dev_Grace
    scriptType: ps
    scriptLocation: inlineScript
    inlineScript: |
      $p = ${env:PARAMETERS} 
      "Parameters: $p"
      $j = $p | convertfrom-json

      if ([string]::IsNullOrEmpty($j.azureMonitorWorkspaceLocation)) {
         write-host "'azureMonitorWorkspaceLocation' not provided..."

         $rg = (az group show -g ${env:RESOURCE-GROUP} | convertfrom-json)
         write-host "Using location '$($rg.location)' from '$($rg.name)"

        # Does the property exist?
        if ($j.azureMonitorWorkspaceLocation -eq $null) {
          write-host "Adding new 'azureMonitorWorkspaceLocation' property..."
          $newBlock = @{value = $($rg.location)}
          $j | Add-Member -name "azureMonitorWorkspaceLocation" -MemberType NoteProperty -value $newBlock
        } else {
          write-host "Adding existing 'azureMonitorWorkspaceLocation' property..."
          $j.azureMonitorWorkspaceLocation = $rg.location
        }
      } else {
         write-host "'azureMonitorWorkspaceLocation' = $($j.azureMonitorWorkspaceLocation)"
      }

      $j | fl

      $p = $j | convertto-json -Compress
      "Final parameters: $p"

      az --version
      az account show
      az deployment group create `
          --resource-group ${env:RESOURCE-GROUP} `
          --name ClusterDeployment `
          --template-file ".\wip9-final.json" `
          --parameters $($p.value)    ##${env:PARAMETERS}   
          
